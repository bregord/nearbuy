{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red49\green49\blue49;\red52\green52\blue52;\red237\green237\blue237;
\red67\green67\blue67;\red202\green202\blue202;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww11100\viewh8700\viewkind0
\deftab720
\pard\pardeftab720\sa280

\f0\fs28 \cf2 \

\b GLOBAL
\b0 \
The global keyword is used to access a global variable from within a function.\
To do this, use the global keyword before the variables (inside the function):\
PHP also stores all global variables in an array called $GLOBALS[
\i index
\i0 ]. The 
\i index
\i0  holds the name of the variable. This array is also accessible from within functions and can be used to update global variables directly.\
The example above can be rewritten like this:\
\

\b Static\

\b0 Normally, when a function is completed/executed, all of its variables are deleted. However, sometimes we want a local variable NOT to be deleted. We need it for a further job.\
To do this, use the 
\b static
\b0  keyword when you first declare the variable:\
\

\b array
\b0 \
In the following example we create an array, and then use the PHP var_dump() function to return the data type and value of the array:\
\pard\pardeftab720\sa200

\fs32 \cf3 \cb4 Example\
\pard\pardeftab720

\f1\fs28 \cf0 \cb1 <?php \
$cars=array("Volvo","BMW","Toyota");\
var_dump($cars);\
?>\
\pard\pardeftab720\sa280

\f0 \cf2 \
\pard\pardeftab720\sa200

\fs44 \cf0 PHP Objects\
\pard\pardeftab720\sa280

\fs28 \cf2 An object is a data type which stores data and information on how to process that data.\
In PHP, an object must be explicitly declared.\
First we must declare a class of object. For this, we use the class keyword. A class is a structure that can contain properties and methods.\
We then define the data type in the object class, and then we use the data type in instances of that class:\
\pard\pardeftab720\sa200

\fs32 \cf3 \cb4 Example\
\pard\pardeftab720

\f1\fs28 \cf0 \cb1 <?php\
class Car\
\{\
\'a0 var $color;\
\'a0 function Car($color="green") \{\
\'a0\'a0\'a0 $this->color = $color;\
\'a0 \}\
\'a0 function what_color() \{\
\'a0\'a0\'a0 return $this->color;\
\'a0 \}\
\}\
?>\
\pard\pardeftab720\sa280

\f0 \cf2 \
constants global across entire script\
\
\
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clcbpat5 \clwWidth2320\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl60 \clpadb60 \clpadr60 \gaph\cellx2160
\clvertalt \clcbpat5 \clwWidth3960\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl60 \clpadb60 \clpadr60 \gaph\cellx4320
\clvertalt \clcbpat5 \clwWidth3960\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl60 \clpadb60 \clpadr60 \gaph\cellx6480
\clvertalt \clcbpat5 \clwWidth5600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl60 \clpadb60 \clpadr60 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b \cf1 Operator\cell 
\pard\intbl\itap1\pardeftab720
\cf1 Name\cell 
\pard\intbl\itap1\pardeftab720
\cf1 Example\cell 
\pard\intbl\itap1\pardeftab720
\cf1 Result\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt \clcbpat1 \clwWidth2240\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx2160
\clvertalt \clcbpat1 \clwWidth3880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth3880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx6480
\clvertalt \clcbpat1 \clwWidth5520\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720

\b0 \cf2 .\cell 
\pard\intbl\itap1\pardeftab720
\cf2 Concatenation\cell 
\pard\intbl\itap1\pardeftab720
\cf2 $txt1 = "Hello"\
$txt2 = $txt1 . " world!"\cell 
\pard\intbl\itap1\pardeftab720
\cf2 Now $txt2 contains "Hello world!"\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clcbpat4 \clwWidth2240\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx2160
\clvertalt \clcbpat4 \clwWidth3880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx4320
\clvertalt \clcbpat4 \clwWidth3880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx6480
\clvertalt \clcbpat4 \clwWidth5520\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt140 \clpadl100 \clpadb140 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720
\cf2 .=\cell 
\pard\intbl\itap1\pardeftab720
\cf2 Concatenation assignment\cell 
\pard\intbl\itap1\pardeftab720
\cf2 $txt1 = "Hello"\
$txt1 .= " world!"\cell 
\pard\intbl\itap1\pardeftab720
\cf2 Now $txt1 contains "Hello world!"\cell \lastrow\row
\pard\pardeftab720\sa280
\cf2 The example below shows the results of using the string operators:\
\pard\pardeftab720
\cf0 \cb4 \
\
\
\
\
\pard\pardeftab720\sa200

\fs44 \cf0 \cb1 Create an Array in PHP\
\pard\pardeftab720\sa280

\fs28 \cf2 In PHP, the array() function is used to create an array:\
\pard\pardeftab720

\f1 \cf3 \cb4 array();\
\pard\pardeftab720\sa280

\f0 \cf2 \cb1 In PHP, there are three types of arrays:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0
\b \cf2 {\listtext	\'95	}Indexed arrays
\b0  - Arrays with a numeric index\
\ls1\ilvl0
\b {\listtext	\'95	}Associative arrays
\b0  - Arrays with named keys\
\ls1\ilvl0
\b {\listtext	\'95	}Multidimensional arrays
\b0  - Arrays containing one or more arrays\
{\listtext	\'95	}\
\pard\tx566\pardeftab720
\cf2 count(arraynamehere) gets lentth\
\
\
\pard\pardeftab720\sa200

\fs44 \cf0 PHP Associative Arrays\
\pard\pardeftab720\sa280

\fs28 \cf2 Associative arrays are arrays that use named keys that you assign to them.\
There are two ways to create an associative array:\'a0\
\pard\pardeftab720

\f1 \cf3 \cb4 $age=array("Peter"=>"35","Ben"=>"37","Joe"=>"43");\
\pard\pardeftab720\sa280

\f0 \cf2 \cb1 or:\
\pard\pardeftab720

\f1 \cf3 \cb4 $age['Peter']="35";\
$age['Ben']="37";\
$age['Joe']="43";\
\pard\tx566\pardeftab720

\f0 \cf2 \cb1 \
use foreach to loop through\
\
\
and a bunch of sorting functions\
}